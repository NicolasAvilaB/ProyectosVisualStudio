<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AwbKtAJ4FrsAAAAASUVORK5CYII=
</value>
  </data>
</root>